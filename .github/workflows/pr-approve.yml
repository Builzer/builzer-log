name: PR Approval Workflow

on:
  pull_request_review:
    types: [submitted]

env:
  SLACK_CODE_REVIEW_NOTIFICATION_URL: ${{ secrets.SLACK_CODE_REVIEW_NOTIFICATION_URL }}

jobs:
  check-approval:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check PR approval status
        id: check_approval_status
        run: |
          if [ "${{ github.event.review.state }}" == "approved" ]; then
            echo "PR has been approved!"
            echo "::set-output name=approved::true"
          else
            echo "PR has not been approved."
            echo "::set-output name=approved::false"
          fi

  approve-notification:
    runs-on: ubuntu-latest
    needs: [check-approval]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Get PR Info
        id: pr_info
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          
          # Get PR Title
          PR_TITLE=$(curl -sSL -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}" | jq -r '.title')
          
          # Get PR Assignees
          PR_ASSIGNEES=$(curl -sSL -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}" | jq -r '[.assignees[].login] | join(", ")')
          
          # Get Approved Reviewers
          PR_APPROVED_REVIEWERS=$(curl -sSL -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}/reviews" | jq -r '[.[] | select(.state == "APPROVED") | .user.login] | join(", ")')
          
          # Get PR Reviewers
          PR_REVIEWERS=$(curl -sSL -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}/requested_reviewers" | jq -r '[.users[].login] | join(", ")')
          
          REMAINING_APPROVALS=$(echo "$PR_REVIEWERS" | wc -w | xargs)
          
          echo "PR_TITLE=$PR_TITLE" >> $GITHUB_ENV
          echo "PR_ASSIGNEES=$PR_ASSIGNEES" >> $GITHUB_ENV
          echo "PR_APPROVED_REVIEWERS=$PR_APPROVED_REVIEWERS" >> $GITHUB_ENV
          echo "REMAINING_APPROVALS=$REMAINING_APPROVALS" >> $GITHUB_ENV
      - name: Send Successful deployment message to slack channel
        run: |
          curl -X POST --data-urlencode "payload={\"channel\": \"#builzer-코드리뷰
          \", \"username\": \"PR Approve 알림\", \"text\": \"[모듈]: builzer-log\n[제목]: ${{ env.PR_TITLE }}\n[요청자]: ${{ env.PR_ASSIGNEES }}\n[승인자]: ${{ env.PR_APPROVED_REVIEWERS }}\n[남은 승인]: ${{ env.REMAINING_APPROVALS }}\"}" ${{ env.SLACK_CODE_REVIEW_NOTIFICATION_URL }}